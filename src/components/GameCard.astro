---
export interface Props {
  game: string;
  category: string;
  time: string;
  placement: number;
  videoUrl?: string;
  leaderboardUrl?: string;
  notes?: string;
  imageUrl?: string;
}

const { game, category, time, placement, videoUrl, leaderboardUrl, notes, imageUrl } = Astro.props;

function getPlacementColor(placement: number): string {
  if (placement === 1) return 'text-yellow-600 bg-yellow-50 border-yellow-200';
  if (placement <= 3) return 'text-orange-600 bg-orange-50 border-orange-200';
  if (placement <= 10) return 'text-blue-600 bg-blue-50 border-blue-200';
  if (placement <= 50) return 'text-green-600 bg-green-50 border-green-200';
  return 'text-gray-600 bg-gray-50 border-gray-200';
}

function getPlacementSuffix(placement: number): string {
  if (placement % 10 === 1 && placement % 100 !== 11) return 'st';
  if (placement % 10 === 2 && placement % 100 !== 12) return 'nd';
  if (placement % 10 === 3 && placement % 100 !== 13) return 'rd';
  return 'th';
}

const placementClasses = getPlacementColor(placement);
---

<div class="bg-white rounded-lg shadow-lg overflow-hidden hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
  <!-- Game Image/Header -->
  <div class="h-48 bg-gradient-to-br from-blue-500 to-purple-600 relative overflow-hidden">
    {imageUrl ? (
      <img 
        src={imageUrl} 
        alt={game}
        class="w-full h-full object-cover"
      />
    ) : (
      <div class="flex items-center justify-center h-full">
        <div class="text-center text-white">
          <div class="text-2xl font-bold mb-2">{game}</div>
          <div class="text-blue-100 text-sm">{category}</div>
        </div>
      </div>
    )}
    
    <!-- Placement Badge -->
    <div class="absolute top-4 right-4">
      <div class={`px-3 py-1 rounded-full border-2 font-bold text-sm ${placementClasses}`}>
        #{placement}
      </div>
    </div>
  </div>

  <!-- Card Content -->
  <div class="p-6">
    <!-- Game Title and Category -->
    <div class="mb-4">
      <h3 class="text-xl font-bold text-gray-900 mb-1">{game}</h3>
      <p class="text-gray-600 text-sm bg-gray-100 px-3 py-1 rounded-full inline-block">
        {category}
      </p>
    </div>

    <!-- Time and Placement -->
    <div class="grid grid-cols-2 gap-4 mb-4">
      <div>
        <p class="text-sm text-gray-600 mb-1">Personal Best</p>
        <p class="text-2xl font-bold text-blue-600">{time}</p>
      </div>
      <div>
        <p class="text-sm text-gray-600 mb-1">Placement</p>
        <p class={`text-2xl font-bold ${getPlacementColor(placement).split(' ')[0]}`}>
          {placement}{getPlacementSuffix(placement)}
        </p>
      </div>
    </div>

    <!-- Notes -->
    {notes && (
      <div class="mb-4">
        <p class="text-gray-600 text-sm">{notes}</p>
      </div>
    )}

    <!-- Action Buttons -->
    <div class="flex items-center justify-between pt-4 border-t border-gray-100">
      <div class="flex space-x-3">
        {videoUrl && (
          <a 
            href={videoUrl} 
            target="_blank"
            class="inline-flex items-center text-blue-600 hover:text-blue-800 transition-colors text-sm font-medium"
          >
            <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 24 24">
              <path d="M8 5v14l11-7z"/>
            </svg>
            Watch Run
          </a>
        )}
        
        {leaderboardUrl && (
          <a 
            href={leaderboardUrl} 
            target="_blank"
            class="inline-flex items-center text-green-600 hover:text-green-800 transition-colors text-sm font-medium"
          >
            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
            </svg>
            Leaderboard
          </a>
        )}
      </div>

      <!-- Achievement Indicators -->
      <div class="flex items-center space-x-1">
        {placement === 1 && (
          <svg class="w-5 h-5 text-yellow-500" fill="currentColor" viewBox="0 0 20 20">
            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
          </svg>
        )}
        {placement <= 3 && placement !== 1 && (
          <svg class="w-5 h-5 text-orange-500" fill="currentColor" viewBox="0 0 20 20">
            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
          </svg>
        )}
        {placement <= 10 && placement > 3 && (
          <svg class="w-5 h-5 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"/>
          </svg>
        )}
      </div>
    </div>
  </div>
</div>